name: Function app workflow
on: push

env:
  OUTPUT_PATH: ${{ github.workspace }}/output
  AZURE_FUNCTIONAPP_NAME: ScoopSearch.Functions
  AZURE_FUNCTIONAPP_PATH: ${{ github.workspace }}/src/
  # AZURE_FUNCTIONAPP_PUBLISH_PROFILE: '' # Secret in the repository
  DOTNET_VERSION: '3.1.100'

jobs:
  build:
    if: contains(github.event.head_commit.message, '[skip ci]') == false
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup .NET Core ${{ env.DOTNET_VERSION }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Install dependencies
      run: dotnet restore ${{ env.AZURE_FUNCTIONAPP_PATH }}

    - name: Unit testing
      run: dotnet test --configuration Release --logger "console;verbosity=detailed"
      env:
        AzureSearchAdminApiKey: ${{ secrets.AZURESEARCHADMINAPIKEY }}
        GitHubToken: ${{ secrets.GITHUBTOKEN }}

    - name: Publish
      run: dotnet publish ${{ env.AZURE_FUNCTIONAPP_PATH }} --configuration Release --no-restore --output ${{ env.OUTPUT_PATH }}

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: function-app
        path: ${{ env.OUTPUT_PATH }}

  deploy:
    if: github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, '[skip ci]') == false
    runs-on: windows-latest
    needs: [ build ]

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
          name: function-app
          path: ${{ env.OUTPUT_PATH }}

    - name: 'Publish Azure Functions'
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: '${{ env.OUTPUT_PATH }}'
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
